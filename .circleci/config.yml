version: 2
jobs:
  build:
    docker:
    - image: quay.io/cybozu/golang:1.11-bionic
    - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    resource_class: large
    steps:
    - checkout
    - run: make SUDO="" setup
    - run: make test
    - run: make deb FAKEROOT=
  build_release:
    docker:
    - image: quay.io/cybozu/golang:1.11-bionic
    - image: quay.io/coreos/etcd:v3.3
    working_directory: /work
    resource_class: large
    steps:
    - checkout
    - run: make SUDO="" setup
    - run: make test
    - run:
        name: Build deb package
        command: |
          VERSION=$(echo $CIRCLE_TAG | sed 's/^release-//')
          make deb VERSION="$VERSION" TAGS=release FAKEROOT=
    - persist_to_workspace:
        root: .
        paths:
          - "*.deb"
  deploy_github:
    docker:
    - image: quay.io/cybozu/golang:1.11-bionic
    steps:
    - attach_workspace:
        at: ./artifacts
    - run: ghr -prerelease -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} ${CIRCLE_TAG} ./artifacts/
  dctest:
    docker:
      - image: google/cloud-sdk
    resource_class: large
    steps:
      - checkout
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            echo "$QUAY_PASSWORD" > secrets
      - run:
          name: Watch console on boot-0
          command: |
            ./bin/watch_boot0
          background: true
      - run:
          name: Watch neco-worker logs
          command: |
            ./bin/watch_neco_worker
          background: true
      - run:
          command: |
            ./bin/run-dctest.sh
          no_output_timeout: 20m
      - run:
          name: Clean up SSH keys generated by `gcloud compute`
          command: |
            gcloud --quiet --project neco-test compute project-info remove-metadata --keys=ssh-keys
  generate-artifacts:
      docker:
      - image: quay.io/cybozu/golang:1.11-bionic
      steps:
      - checkout
      - run: go install ./pkg/generate-artifacts/
      - run: generate-artifacts --release > artifacts_release.go
      - persist_to_workspace:
          root: .
          paths:
            - "artifacts_release.go"
  update-release:
      docker:
      - image: google/cloud-sdk
      steps:
      - checkout
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Configure GIT
          command: |
            git config --global user.email "neco@cybozu.com"
            git config --global user.name "cybozu-neco"
      - run: git checkout release
      - run: git merge master
      - run: cp /tmp/workspace/artifacts_release.go .
      - run: if [ $(git status -s) = "" ]; then exit 0; fi
      - run:
          name: Store Service Account
          command: |
            echo $GCLOUD_SERVICE_ACCOUNT > account.json
            gcloud auth activate-service-account --key-file=account.json
      - run:
          name: Store secrets
          command: |
            echo "$QUAY_PASSWORD" > secrets
      - run:
          name: Watch console on boot-0
          command: |
            ./bin/watch_boot0
          background: true
      - run:
          name: Watch neco-worker logs
          command: |
            ./bin/watch_neco_worker
          background: true
      - run:
          command: |
            ./bin/run-dctest-release.sh
          no_output_timeout: 20m
      - add_ssh_keys:
          fingerprints:
            - "9a:0c:d9:d4:93:14:60:ad:45:9d:fb:c0:77:65:58:70"
      - run: ./bin/commit-push.sh

workflows:
  version: 2
  main:
    jobs:
      - build
      - dctest
  release:
    jobs:
      - build_release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
      - deploy_github:
          requires:
            - build_release
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^release-.*/
  daily:
    triggers:
      - schedule:
          cron: "0 15 * * 1-5"
          filters:
            branches:
              only:
                - release
    jobs:
      - generate-artifacts
      - update-release:
          requires:
            - generate-artifacts
  master:
    jobs:
      - generate-artifacts:
          filters:
            branches:
              only:
                - master
      - update-release:
          requires:
            - generate-artifacts
          filters:
            branches:
              only:
                - master
