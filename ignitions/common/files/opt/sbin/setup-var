#!/bin/sh -eu

VG=vg1
LVLIST="containerd docker kubelet rkt"
CONTAINERD_SIZE=10g
DOCKER_SIZE=10g
KUBELET_SIZE=10g
RKT_SIZE=10g

lvsize() {
    case $1 in
    containerd)
        echo $CONTAINERD_SIZE
        ;;
    docker)
        echo $DOCKER_SIZE
        ;;
    kubelet)
        echo $KUBELET_SIZE
        ;;
    rkt)
        echo $RKT_SIZE
        ;;
    esac
}

prepare_lv() {
    vgchange -a ay
    sleep 1

    if ! vgs $VG >/dev/null 2>&1; then
        vgcreate $VG $PVS -y
        sync
    fi

    lvchange $VG -a ay
    sleep 1

    for lv in $LVLIST; do
        if ! lvs $VG/$lv >/dev/null 2>&1; then
            lvcreate -y -n $lv -L $(lvsize $lv) $VG
        fi
        sync
        sleep 1
    done
}

if ls /dev/mapper/crypt-virtio-pci-* >/dev/null 2>&1; then
    # for qemu
    PVS=$(ls /dev/mapper/crypt-virtio-pci-*)
    prepare_lv
elif ls /dev/mapper/crypt-pci-*-nvme-1 >/dev/null 2>&1; then
    # for compute node
    PVS=$(ls /dev/mapper/crypt-pci-*-nvme-1)
    CONTAINERD_SIZE=1t
    DOCKER_SIZE=50g
    KUBELET_SIZE=100g
    prepare_lv
else
    # for storage node
    PVS=$(ls /dev/mapper/crypt-pci-*-ata-1)
    CONTAINERD_SIZE=50g
    DOCKER_SIZE=50g
    prepare_lv
fi

for label in $LVLIST; do
    DEVICE=/dev/$VG/$label
    while true; do
        if [ -e $DEVICE ]; then
            break
        fi
        echo "waiting for $DEVICE to appear..."
        sleep 1
    done

    if [ $label != "$(lsblk -n -o LABEL $DEVICE)" ]; then
        mkfs.ext4 -L $label $DEVICE
    fi
done

sync
