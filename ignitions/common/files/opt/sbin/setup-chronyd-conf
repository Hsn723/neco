#!/bin/sh

ip4_to_int() {
  IFS=. read -r i j k l <<EOF
$1
EOF
  echo "$(((i << 24) + (j << 16) + (k << 8) + l))"
}

# converts interger to IPv4 as "A.B.C.D"
int_to_ip4() {
  echo "$(( ($1 >> 24) % 256 )).$(( ($1 >> 16) % 256 )).$(( ($1 >> 8) % 256 )).$(( $1 % 256 ))"
}

echo "# ntp servers" >/etc/chrony.conf 

LRN=$(cat /etc/neco/rack)
ipv4_offset_int=$(ip4_to_int 10.69.0.0)
boot_servers=""
for i in $(seq 0 2); do
  boot_lrn=$((LRN / 3 * 3 + i))
  boot_addr=$(int_to_ip4 $((ipv4_offset_int + (192 * boot_lrn) + 3)))
  boot_servers="$boot_addr $boot_servers"
done

for addr in $boot_servers; do
  echo "server $addr iburst" >>/etc/chrony.conf
done
echo "initstepslew 0.1 $boot_servers" >>/etc/chrony.conf

cat >>/etc/chrony.conf <<EOF
# Record the rate at which the system clock gains/losses time.
driftfile /var/lib/chrony/drift

# Allow the system clock to be stepped in the first three updates
# if its offset is larger than 1 second.
makestep 1.0 3

# Enable kernel synchronization of the real-time clock (RTC).
rtcsync

# Ignore leap second; ajdust by slewing
leapsecmode slew
maxslewrate 1000
smoothtime 400 0.001 leaponly

# mlockall
lock_all

# set highest scheduling priority
sched_priority 99
EOF
